{"version":3,"file":"chunk-pg-shop-79e05571.js","sources":["../../../../pages/shop/[category]/[subCategory]/[id].vue","../../../../node_modules/multi-range-slider-vue/MultiRangeSlider.vue","../../../../pages/shop/[category]/[subCategory]/index.vue","../../../../components/CategoryCard.vue","../../../../pages/shop/[category]/index.vue","../../../../pages/shop/index.vue"],"sourcesContent":["﻿<template>\r\n    <div>\r\n        <div class=\"container\">\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol class=\"breadcrumb onmalika-breadcrumb\">\r\n                    <li class=\"breadcrumb-item\">\r\n                        <NuxtLink to=\"/\">Главная</NuxtLink>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item\">\r\n                        <NuxtLink to=\"/shop\">Магазинчик</NuxtLink>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item\">\r\n                        <NuxtLink :to=\"'/shop/' + product.category.parent.slug\">{{ product.category.parent.name }}\r\n                        </NuxtLink>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item\">\r\n                        <NuxtLink :to=\"'/shop/' + product.category.parent.slug + '/' + product.category.slug\">{{\r\n                            product.category.name }}</NuxtLink>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">{{ product.name }}</li>\r\n                </ol>\r\n            </nav>\r\n\r\n        </div> <!-- container //  -->\r\n        <section>\r\n            <div class=\"container\">\r\n                <div class=\"row justify-content-between onmalika-product\">\r\n                    <div class=\"col-6\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-2\">\r\n                                <div class=\"onmalika-product-gallery\">\r\n                                    <div class=\"onmalika-product-gallery-item active\"\r\n                                        v-if=\"product.images && product.images.length > 1\">\r\n                                        <div v-for=\"(progall, index) in product.images\" :key=\"progall\">\r\n\r\n                                            <img :src=\"urlOfMedia + progall.url\" class=\"w-100\" alt=\"\" />\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-10\">\r\n                                <div class=\"onmalika-product-main-img\" v-for=\"progall in product.images\" :key=\"progall\">\r\n                                    <img :src=\"urlOfMedia + progall.url\" class=\"w-100\" alt=\"\">\r\n                                    <div class=\"onmalika-product-rating\">\r\n                                        <button type=\"button\" @click=\"checkAuth\" class=\"onmalika-product-favorite\">\r\n                                            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M12.62 20.81C12.28 20.93 11.72 20.93 11.38 20.81C8.48 19.82 2 15.69 2 8.68998C2 5.59998 4.49 3.09998 7.56 3.09998C9.38 3.09998 10.99 3.97998 12 5.33998C13.01 3.97998 14.63 3.09998 16.44 3.09998C19.51 3.09998 22 5.59998 22 8.68998C22 15.69 15.52 19.82 12.62 20.81Z\"\r\n                                                    stroke=\"black\" stroke-width=\"1.5\" stroke-linecap=\"round\"\r\n                                                    stroke-linejoin=\"round\" />\r\n                                            </svg>\r\n                                        </button>\r\n                                        <p>\r\n                                            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M13.5639 4.3011L15.1502 7.49508C15.364 7.93681 15.9378 8.35588 16.4216 8.44649L19.2905 8.92219C21.1244 9.22799 21.5519 10.5645 20.2356 11.901L17.9967 14.1549C17.6254 14.5286 17.4116 15.2649 17.5354 15.7972L18.1767 18.5834C18.683 20.7807 17.5129 21.6415 15.589 20.4862L12.9001 18.8779C12.4163 18.5834 11.6062 18.5834 11.1224 18.8779L8.43351 20.4862C6.50963 21.6302 5.33955 20.7807 5.84583 18.5834L6.48712 15.7972C6.58838 15.2535 6.37462 14.5173 6.00334 14.1436L3.76444 11.8896C2.4481 10.5645 2.87563 9.22799 4.7095 8.91086L7.57845 8.43516C8.06223 8.35588 8.63602 7.92548 8.84979 7.48376L10.4361 4.28977C11.3025 2.56819 12.6975 2.56819 13.5639 4.3011Z\"\r\n                                                    fill=\"#FFB800\" />\r\n                                            </svg>\r\n                                            5.0\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <h1 class=\"onmalika-product-title\">{{ product.name }}</h1>\r\n                        <h4 class=\"onmalika-product-short-title\">\r\n                            Краткое описание:\r\n                        </h4>\r\n                        <p class=\"onmalika-product-short\">{{ product.short_description }}</p>\r\n                        <p class=\"onmalika-product-short\">{{ product.sku }}</p>\r\n                        <div class=\"onmalika-product-reviews-stock\">\r\n                            <p>\r\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z\"\r\n                                        stroke=\"#46AC36\" stroke-width=\"1.5\" stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\" />\r\n                                    <path d=\"M7.75 11.9999L10.58 14.8299L16.25 9.16992\" stroke=\"#46AC36\" stroke-width=\"1.5\"\r\n                                        stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg>\r\n                                Есть в наличии\r\n                            </p>\r\n                            <button type=\"button\" class=\"onmalika-product-reviews\" data-bs-toggle=\"modal\"\r\n                                data-bs-target=\"#reviewsModal\">\r\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M8.5 19H8C4 19 2 18 2 13V8C2 4 4 2 8 2H16C20 2 22 4 22 8V13C22 17 20 19 16 19H15.5C15.19 19 14.89 19.15 14.7 19.4L13.2 21.4C12.54 22.28 11.46 22.28 10.8 21.4L9.3 19.4C9.14 19.18 8.77 19 8.5 19Z\"\r\n                                        stroke=\"black\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\" />\r\n                                    <path d=\"M15.9965 11H16.0054\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\" />\r\n                                    <path d=\"M11.9945 11H12.0035\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\" />\r\n                                    <path d=\"M7.99451 11H8.00349\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\" />\r\n                                </svg>\r\n                                <span>\r\n                                    Отзывы\r\n                                </span>\r\n                            </button>\r\n                        </div>\r\n                        <h4 class=\"onmalika-product-price\">\r\n                            {{ getPriceText() }}\r\n                        </h4>\r\n                        <p class=\"mb-3\">Brand: <NuxtLink :to=\"'/brands/' + product.brand.slug\"\r\n                                @click.prevent=\"goToBrand(product.brand.slug)\">{{\r\n                                    product.brand.name }}</NuxtLink>\r\n                        </p>\r\n\r\n\r\n                        <div class=\"onmalika-product-btns\">\r\n                            <button @click=\"addToCart\" class=\"btn dark-cover\" type=\"button\">\r\n                                В корзину\r\n                            </button>\r\n                            <div class=\"product-counter\">\r\n                                <button type=\"button\" @click=\"decreaseQuantity\"> <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        width=\"22\" height=\"22\" fill=\"#999\" viewBox=\"0 0 24 24\">\r\n                                        <path d=\"M19 13H5v-2h14v2z\"></path>\r\n                                    </svg></button>\r\n                                <input class=\"text-center\" type=\"text\" v-model=\"quantity\" disabled>\r\n                                <button @click=\"increaseQuantity\" type=\"button\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"#999\"\r\n                                        viewBox=\"0 0 24 24\">\r\n                                        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        <section>\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n\r\n                        <div class=\"accordion onmalika-accardion\" id=\"accordionExample\">\r\n\r\n                            <div class=\"accordion-item\" v-if=\"product.description\">\r\n                                <h2 class=\"accordion-header\">\r\n                                    <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                        data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                        Описание\r\n                                    </button>\r\n                                </h2>\r\n                                <div id=\"collapseOne\" class=\"accordion-collapse collapse show\"\r\n                                    data-bs-parent=\"#accordionExample\">\r\n                                    <div class=\"accordion-body\">\r\n                                        {{ product.description }}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"accordion-item\">\r\n                                <h2 class=\"accordion-header\">\r\n                                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                        data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                        Характеристики\r\n                                    </button>\r\n                                </h2>\r\n                                <div id=\"collapseTwo\" class=\"accordion-collapse collapse\"\r\n                                    data-bs-parent=\"#accordionExample\">\r\n                                    <div class=\"accordion-body\">\r\n                                        <ul v-for=\"atrs in product.product_attrs\">\r\n                                            <li>{{ atrs.attribute.name }} <span>{{ atrs.attribute_value.value }}</span>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <div v-cloak v-html=\"product.content\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </section>\r\n       \r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\n\r\nimport { useCartStore } from '~/store/cart';\r\nimport { useAuthStore } from '~/store/auth';\r\nconst authStore = useAuthStore()\r\nconst CartStore = useCartStore()\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst { data: product } = await useJsonPlaceholderData('/products/' + route.params.id)\r\nconst urlOfMedia = 'https://admin.itpapa.uz'\r\nif (!product.value || !product.value.category) {\r\n    throw createError({ statusCode: 404, message: 'Такого товара нету' })\r\n}\r\nconst rating = ref(5);\r\nconst galleryArray = ref(null);\r\nonMounted(async () => {\r\n    // Загрузка данных продукта\r\n\r\n    galleryArray.value = product.value\r\n\r\n    // Создание общего массива изображений\r\n    if (galleryArray.value) {\r\n        let images = []\r\n\r\n        // Добавление основного изображения\r\n        if (galleryArray.value.image) {\r\n            images.push({\r\n                ...galleryArray.value.image,\r\n                id: 'main' // Уникальный ID для основного изображения\r\n            })\r\n        }\r\n\r\n        // Добавление изображений из галереи\r\n        if (galleryArray.value.gallery && galleryArray.value.gallery.length) {\r\n            images = images.concat(galleryArray.value.gallery.map(g => ({ ...g.image, id: g.id })))\r\n        }\r\n\r\n        // Обновление product с новым массивом изображений\r\n        galleryArray.value.images = images\r\n    }\r\n})\r\nconst quantity = ref(1);\r\nconst increaseQuantity = () => {\r\n    quantity.value++;\r\n};\r\nconst decreaseQuantity = () => {\r\n    if (quantity.value > 1) {\r\n        quantity.value--;\r\n    }\r\n};\r\nconst addToCart = () => {\r\n    const cartStore = useCartStore();\r\n    cartStore.addToCart(product.value, quantity.value);\r\n};\r\nconst goToBrand = async (slug) => {\r\n    await router.push('/brands/' + slug)\r\n}\r\nconst checkAuth = async () => {\r\n    if (authStore.isAuthenticated) {\r\n        const post_favorite = await useJsonPlaceholderData('/user/favorites/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: `Bearer ${token_access.value}`\r\n            },\r\n            body: {\r\n                user: authStore.user.id,\r\n                product_id: product_info.id\r\n            }\r\n        })\r\n        alert('Добавлено в избранные')\r\n    } else {\r\n        alert('Вы не авторизованы')\r\n    }\r\n}\r\nimport { useCurrencyStore } from '~/store/currencyStore';\r\nconst currencyStore = useCurrencyStore();\r\nconst getPriceText = () => {\r\n    const currency = currencyStore.selectedCurrency;\r\n    const priceInfo = product.value.prices_in_currencies[currency];\r\n    if (!priceInfo) {\r\n        return \"Цена не указана\";\r\n    }\r\n    return `${priceInfo.price} ${priceInfo.symbol}`;\r\n};\r\nuseSeoMeta({\r\n    title: product.value.name,\r\n    ogTitle: product.value.name,\r\n\r\n});\r\n\r\n\r\n</script>\r\n\r\n","<template>\r\n  <div\r\n    :class=\"[baseClassName, rangeMarginValue === 0 ? 'zero-ranage-margin' : '']\"\r\n    @mousewheel.prevent.stop=\"onMouseWheel\"\r\n  >\r\n    <div class=\"bar\">\r\n      <div\r\n        class=\"bar-left\"\r\n        :style=\"{ width: barMin + '%' }\"\r\n        @click=\"onBarLeftClick\"\r\n      ></div>\r\n      <input\r\n        class=\"input-type-range input-type-range-min\"\r\n        type=\"range\"\r\n        :min=\"minimum\"\r\n        :max=\"maximum\"\r\n        :step=\"step\"\r\n        :value=\"valueMin\"\r\n        @input.stop.prevent=\"onInputMinChange\"\r\n      />\r\n      <div\r\n        class=\"thumb thumb-left\"\r\n        @mousedown=\"onLeftThumbMousedown\"\r\n        @touchstart=\"onLeftThumbMousedown\"\r\n      >\r\n        <div class=\"caption\">\r\n          <span class=\"min-caption\">{{ minCaption || barMinVal }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"bar-inner\">\r\n        <div class=\"bar-inner-left\" @click=\"onInnerBarLeftClick\"></div>\r\n        <div class=\"bar-inner-right\" @click=\"onInnerBarRightClick\"></div>\r\n      </div>\r\n      <input\r\n        class=\"input-type-range input-type-range-max\"\r\n        type=\"range\"\r\n        :min=\"minimum\"\r\n        :max=\"maximum\"\r\n        :step=\"step\"\r\n        :value=\"valueMax\"\r\n        @input.stop.prevent=\"onInputMaxChange\"\r\n      />\r\n\r\n      <div\r\n        class=\"thumb thumb-right\"\r\n        @mousedown=\"onRightThumbMousedown\"\r\n        @touchstart=\"onRightThumbMousedown\"\r\n      >\r\n        <div class=\"caption\">\r\n          <span class=\"max-caption\">{{ maxCaption || barMaxVal }}</span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"bar-right\"\r\n        :style=\"{ width: barMax + '%' }\"\r\n        @click=\"onBarRightClick\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"ruler\" v-if=\"ruler\">\r\n      <div v-for=\"n in stepCount\" :key=\"n\" class=\"ruler-rule\"></div>\r\n    </div>\r\n    <div class=\"sub-ruler\" v-if=\"subStepCount\">\r\n      <div v-for=\"n in subStepCount\" :key=\"n\" class=\"ruler-sub-rule\"></div>\r\n    </div>\r\n\r\n    <div class=\"labels\" v-if=\"label\">\r\n      <div class=\"label\" v-for=\"label in scaleLabels\" :key=\"label\">\r\n        {{ label }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MultiRangeSlider\",\r\n  props: {\r\n    baseClassName: {\r\n      type: String,\r\n      default: \"multi-range-slider\"\r\n    },\r\n    min: { type: Number },\r\n    max: { type: Number },\r\n    minValue: { type: Number },\r\n    maxValue: { type: Number },\r\n    step: { type: Number, default: 1 },\r\n    preventWheel: { type: Boolean, default: false },\r\n    ruler: { type: Boolean, default: true },\r\n    label: { type: Boolean, default: true },\r\n    labels: { type: Array },\r\n    minCaption: { type: String },\r\n    maxCaption: { type: String },\r\n    rangeMargin: { type: Number }\r\n  },\r\n  data() {\r\n    let _labels = this.labels || [];\r\n    let _minimum = this.min === undefined ? 0 : this.min;\r\n    let max = _labels.length ? _labels.length - 1 : 100;\r\n    let _maximum = this.max === undefined ? max : this.max;\r\n    let _minValue = this.minValue === undefined ? 25 : this.minValue;\r\n    if (_labels.length && this.minValue === undefined) {\r\n      _minValue = 1;\r\n    }\r\n    let _maxValue = this.maxValue || 75;\r\n    if (_labels.length && this.maxValue === undefined) {\r\n      _maxValue = _labels.length - 2;\r\n    }\r\n    if (_maximum <= _minimum) {\r\n      throw new Error(\"Invalid props min or max\");\r\n    }\r\n    if (_minValue > _maxValue) {\r\n      throw new Error(\"Invalid props minValue or maxValue\");\r\n    }\r\n    let _rangeMargin =\r\n      this.rangeMargin === undefined ? this.step : this.rangeMargin;\r\n\r\n    let m = _rangeMargin % this.step;\r\n    m && (_rangeMargin = _rangeMargin + this.step - m);\r\n\r\n    return {\r\n      valueMin: _minValue < _minimum ? _minimum : _minValue,\r\n      valueMax: _maxValue > _maximum ? _maximum : _maxValue,\r\n      interVal: null,\r\n      startX: null,\r\n      mouseMoveCounter: null,\r\n      barBox: null,\r\n      barValue: 0,\r\n      rangeMarginValue: _rangeMargin\r\n    };\r\n  },\r\n  methods: {\r\n    onBarLeftClick() {\r\n      if (this.valueMin - this.step >= this.minimum) {\r\n        this.valueMin -= this.step;\r\n      } else {\r\n        this.valueMin = this.minimum;\r\n      }\r\n    },\r\n    onInnerBarLeftClick() {\r\n      if (this.valueMin + this.rangeMarginValue < this.valueMax) {\r\n        this.valueMin += this.step;\r\n      }\r\n    },\r\n    onBarRightClick() {\r\n      if (this.valueMax + this.step <= this.maximum) {\r\n        this.valueMax += this.step;\r\n      } else {\r\n        this.valueMax = this.maximum;\r\n      }\r\n    },\r\n    onInnerBarRightClick() {\r\n      if (this.valueMax - this.rangeMarginValue > this.valueMin) {\r\n        this.valueMax -= this.step;\r\n      }\r\n    },\r\n    onInputMinChange(e) {\r\n      let val = parseFloat(e.target.value);\r\n      if (val <= this.valueMax - this.rangeMarginValue && val >= this.minimum) {\r\n        this.valueMin = val;\r\n      } else {\r\n        e.target.value = this.valueMin;\r\n      }\r\n    },\r\n    onInputMaxChange(e) {\r\n      let val = parseFloat(e.target.value);\r\n      if (val >= this.valueMin + this.rangeMarginValue && val <= this.maximum) {\r\n        this.valueMax = val;\r\n      } else {\r\n        e.target.value = this.valueMax;\r\n      }\r\n    },\r\n    onLeftThumbMousedown(e) {\r\n      e.preventDefault();\r\n      this.startX = e.clientX;\r\n      if (e.type === \"touchstart\") {\r\n        if (e.touches.length === 1) {\r\n          this.startX = e.touches[0].clientX;\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      this.mouseMoveCounter = 0;\r\n      this.barValue = this.valueMin;\r\n      this.barBox = e.target.parentNode.getBoundingClientRect();\r\n      document.addEventListener(\"mousemove\", this.onLeftThumbMousemove);\r\n      document.addEventListener(\"mouseup\", this.onLeftThumbMouseup);\r\n      document.addEventListener(\"touchmove\", this.onLeftThumbMousemove);\r\n      document.addEventListener(\"touchend\", this.onLeftThumbMouseup);\r\n    },\r\n    onLeftThumbMousemove(e) {\r\n      this.mouseMoveCounter++;\r\n      let clientX = e.clientX;\r\n      if (e.type === \"touchmove\") {\r\n        clientX = e.touches[0].clientX;\r\n      }\r\n      let dx = clientX - this.startX;\r\n      let per = dx / this.barBox.width;\r\n      let val = this.barValue + (this.maximum - this.minimum) * per;\r\n      let mod = val % this.step;\r\n      val -= mod;\r\n      if (val < this.minimum) {\r\n        val = this.minimum;\r\n      } else if (val > this.valueMax - this.rangeMarginValue) {\r\n        val = this.valueMax - this.rangeMarginValue;\r\n      }\r\n      this.valueMin = val;\r\n    },\r\n    onLeftThumbMouseup() {\r\n      document.removeEventListener(\"mousemove\", this.onLeftThumbMousemove);\r\n      document.removeEventListener(\"mouseup\", this.onLeftThumbMouseup);\r\n      document.removeEventListener(\"touchmove\", this.onLeftThumbMousemove);\r\n      document.removeEventListener(\"touchend\", this.onLeftThumbMouseup);\r\n    },\r\n    onRightThumbMousedown(e) {\r\n      e.preventDefault();\r\n      this.startX = e.clientX;\r\n      if (e.type === \"touchstart\") {\r\n        if (e.touches.length === 1) {\r\n          this.startX = e.touches[0].clientX;\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      this.mouseMoveCounter = 0;\r\n      this.barValue = this.valueMax;\r\n      this.barBox = e.target.parentNode.getBoundingClientRect();\r\n      document.addEventListener(\"mousemove\", this.onRightThumbMousemove);\r\n      document.addEventListener(\"mouseup\", this.onRightThumbMouseup);\r\n      document.addEventListener(\"touchmove\", this.onRightThumbMousemove);\r\n      document.addEventListener(\"touchend\", this.onRightThumbMouseup);\r\n    },\r\n    onRightThumbMousemove(e) {\r\n      this.mouseMoveCounter++;\r\n\r\n      let clientX = e.clientX;\r\n      if (e.type === \"touchmove\") {\r\n        clientX = e.touches[0].clientX;\r\n      }\r\n      let dx = clientX - this.startX;\r\n      let per = dx / this.barBox.width;\r\n      let val = this.barValue + (this.maximum - this.minimum) * per;\r\n      let mod = val % this.step;\r\n      val -= mod;\r\n\r\n      if (val < this.valueMin + this.rangeMarginValue) {\r\n        val = this.valueMin + this.rangeMarginValue;\r\n      } else if (val > this.maximum) {\r\n        val = this.maximum;\r\n      }\r\n      this.valueMax = val;\r\n    },\r\n    onRightThumbMouseup() {\r\n      document.removeEventListener(\"mousemove\", this.onRightThumbMousemove);\r\n      document.removeEventListener(\"mouseup\", this.onRightThumbMouseup);\r\n      document.removeEventListener(\"touchmove\", this.onRightThumbMousemove);\r\n      document.removeEventListener(\"touchend\", this.onRightThumbMouseup);\r\n    },\r\n    onMouseWheel(e) {\r\n      if (this.preventWheel === true) {\r\n        return;\r\n      }\r\n\r\n      if (!e.shiftKey && !e.ctrlKey) {\r\n        return;\r\n      }\r\n\r\n      let val = this.step;\r\n\r\n      if (e.deltaY < 0) {\r\n        val = -val;\r\n      }\r\n      if (e.shiftKey && e.ctrlKey) {\r\n        if (\r\n          this.valueMin + val >= this.minimum &&\r\n          this.valueMax + val <= this.maximum\r\n        ) {\r\n          this.valueMin = this.valueMin + val;\r\n          this.valueMax = this.valueMax + val;\r\n        }\r\n      } else if (e.ctrlKey) {\r\n        val = this.valueMax + val;\r\n\r\n        if (val < this.valueMin + this.rangeMarginValue) {\r\n          val = this.valueMin + this.rangeMarginValue;\r\n        } else if (val > this.maximum) {\r\n          val = this.maximum;\r\n        }\r\n        this.valueMax = val;\r\n      } else if (e.shiftKey) {\r\n        val = this.valueMin + val;\r\n        if (val < this.minimum) {\r\n          val = this.minimum;\r\n        } else if (val > this.valueMax - this.rangeMarginValue) {\r\n          val = this.valueMax - this.rangeMarginValue;\r\n        }\r\n        this.valueMin = val;\r\n      }\r\n    },\r\n    triggerInput() {\r\n      let fixed = 0;\r\n      if (this.step.toString().includes(\".\")) {\r\n        fixed = 2;\r\n      }\r\n\r\n      let retObj = {\r\n        min: this.minimum,\r\n        max: this.maximum,\r\n        minValue: parseFloat(this.valueMin.toFixed(fixed)),\r\n        maxValue: parseFloat(this.valueMax.toFixed(fixed))\r\n      };\r\n      this.$emit(\"input\", retObj);\r\n    }\r\n  },\r\n  computed: {\r\n    minimum() {\r\n      return this.min === undefined ? 0 : this.min;\r\n    },\r\n    maximum() {\r\n      let _labels = this.labels || [];\r\n      let max = _labels.length ? _labels.length - 1 : 100;\r\n      return this.max === undefined ? max : this.max;\r\n    },\r\n    stepCount() {\r\n      let _labels = this.labels || [];\r\n      if (_labels.length) {\r\n        return _labels.length - 1;\r\n      }\r\n      return Math.floor((this.maximum - this.minimum) / this.step);\r\n    },\r\n    subStepCount() {\r\n      let _labels = this.labels || [];\r\n      if (_labels.length && this.step > 1) {\r\n        return (this.maximum - this.minimum) / this.step;\r\n      }\r\n      return 0;\r\n    },\r\n    barMin() {\r\n      let per =\r\n        ((this.valueMin - this.minimum) / (this.maximum - this.minimum)) * 100;\r\n      return per;\r\n    },\r\n    barMax() {\r\n      let per =\r\n        100 -\r\n        ((this.valueMax - this.minimum) / (this.maximum - this.minimum)) * 100;\r\n      return per;\r\n    },\r\n    barMinVal() {\r\n      let fixed = 0;\r\n      if (this.step.toString().includes(\".\")) {\r\n        fixed = 2;\r\n      }\r\n      return (this.valueMin || 0).toFixed(fixed);\r\n    },\r\n    barMaxVal() {\r\n      let fixed = 0;\r\n      if (this.step.toString().includes(\".\")) {\r\n        fixed = 2;\r\n      }\r\n      return (this.valueMax || 100).toFixed(fixed);\r\n    },\r\n    scaleLabels() {\r\n      let _labels = this.labels || [];\r\n      if (_labels.length === 0) {\r\n        _labels = [];\r\n        _labels.push(this.minimum);\r\n        _labels.push(this.maximum);\r\n      }\r\n\r\n      return _labels;\r\n    }\r\n  },\r\n  watch: {\r\n    valueMin() {\r\n      this.triggerInput();\r\n    },\r\n    valueMax() {\r\n      this.triggerInput();\r\n    },\r\n    minValue(newValue) {\r\n      this.valueMin = newValue < this.minimum ? this.minimum : newValue;\r\n    },\r\n    maxValue(newValue) {\r\n      this.valueMax = newValue > this.maximum ? this.maximum : newValue;\r\n    }\r\n  },\r\n  mounted() {}\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style>\r\n.multi-range-slider * {\r\n  box-sizing: border-box;\r\n  padding: 0px;\r\n  margin: 0px;\r\n}\r\n.multi-range-slider {\r\n  display: flex;\r\n  position: relative;\r\n  border: solid 1px gray;\r\n  border-radius: 10px;\r\n  padding: 20px 10px;\r\n  box-shadow: 1px 1px 4px black;\r\n  flex-direction: column;\r\n  -webkit-touch-callout: none; /* iOS Safari */\r\n  -webkit-user-select: none; /* Safari */\r\n  -khtml-user-select: none; /* Konqueror HTML */\r\n  -moz-user-select: none; /* Old versions of Firefox */\r\n  -ms-user-select: none; /* Internet Explorer/Edge */\r\n  user-select: none; /* Non-prefixed version, currently supported by Chrome, Edge,*/\r\n}\r\n.multi-range-slider .bar {\r\n  display: flex;\r\n}\r\n.multi-range-slider .bar-left {\r\n  width: 25%;\r\n  background-color: #f0f0f0;\r\n  border-radius: 10px 0px 0px 10px;\r\n  box-shadow: inset 0px 0px 5px black;\r\n  padding: 4px 0px;\r\n}\r\n.multi-range-slider .bar-right {\r\n  width: 25%;\r\n  background-color: #f0f0f0;\r\n  border-radius: 0px 10px 10px 0px;\r\n  box-shadow: inset 0px 0px 5px black;\r\n}\r\n.multi-range-slider .bar-inner {\r\n  background-color: lime;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  border: solid 1px black;\r\n  justify-content: space-between;\r\n  box-shadow: inset 0px 0px 5px black;\r\n}\r\n.multi-range-slider .bar-inner-left {\r\n  width: 50%;\r\n}\r\n.multi-range-slider .bar-inner-right {\r\n  width: 50%;\r\n}\r\n.multi-range-slider .thumb {\r\n  background-color: red;\r\n  position: relative;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n}\r\n.multi-range-slider .thumb::before {\r\n  content: \"\";\r\n  background-color: white;\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: solid 1px black;\r\n  box-shadow: 0px 0px 3px black, inset 0px 0px 5px gray;\r\n  border-radius: 50%;\r\n  z-index: 1;\r\n  margin: -8px;\r\n  cursor: pointer;\r\n}\r\n.multi-range-slider .input-type-range:focus + .thumb::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: -4px;\r\n  left: -4px;\r\n  width: 11px;\r\n  height: 11px;\r\n  z-index: 2;\r\n  border-radius: 50%;\r\n  border: dotted 1px black;\r\n  box-shadow: 0px 0px 5px white, inset 0px 0px 10px black;\r\n}\r\n.multi-range-slider .caption {\r\n  position: absolute;\r\n  bottom: 35px;\r\n  width: 2px;\r\n  height: 2px;\r\n  left: 1px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: visible;\r\n  display: none;\r\n}\r\n.multi-range-slider .thumb .caption * {\r\n  position: absolute;\r\n  min-width: 30px;\r\n  height: 30px;\r\n  font-size: 75%;\r\n  text-align: center;\r\n  line-height: 30px;\r\n  background-color: blue;\r\n  border-radius: 15px;\r\n  color: white;\r\n  box-shadow: 0px 0px 5px black;\r\n  padding: 0px 5px;\r\n  white-space: nowrap;\r\n}\r\n.multi-range-slider .thumb:active .caption {\r\n  display: flex;\r\n}\r\n.multi-range-slider .input-type-range:focus + .thumb .caption {\r\n  display: flex;\r\n}\r\n.multi-range-slider .input-type-range {\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  opacity: 0;\r\n  pointer-events: none;\r\n}\r\n\r\n.multi-range-slider .ruler {\r\n  margin: 10px 0px -5px 0px;\r\n  display: flex;\r\n  /* display: none; */\r\n  overflow: hidden;\r\n}\r\n.multi-range-slider .ruler .ruler-rule {\r\n  border-left: solid 1px;\r\n  border-bottom: solid 1px;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n  padding: 5px 0px;\r\n}\r\n.multi-range-slider .ruler .ruler-rule:last-child {\r\n  border-right: solid 1px;\r\n}\r\n\r\n.multi-range-slider .sub-ruler {\r\n  margin: -2px 0px -5px 0px;\r\n  display: flex; /*\r\ndisplay: none; */\r\n}\r\n.multi-range-slider .sub-ruler .ruler-sub-rule {\r\n  border-left: solid 1px;\r\n  border-bottom: solid 1px;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n  padding: 3px 0px;\r\n}\r\n.multi-range-slider .sub-ruler .ruler-sub-rule:last-child {\r\n  border-right: solid 1px;\r\n}\r\n\r\n.multi-range-slider .labels {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0px;\r\n  margin-top: 10px;\r\n  margin-bottom: -20px;\r\n  /* display: none; */\r\n}\r\n.multi-range-slider .label {\r\n  font-size: 80%;\r\n  display: flex;\r\n  width: 1px;\r\n  justify-content: center;\r\n}\r\n.multi-range-slider .label:first-child {\r\n  justify-content: start;\r\n}\r\n.multi-range-slider .label:last-child {\r\n  justify-content: end;\r\n}\r\n.multi-range-slider.zero-ranage-margin .thumb-left {\r\n  right: 12px;\r\n}\r\n.multi-range-slider.zero-ranage-margin .thumb-right {\r\n  left: 8px;\r\n}\r\n</style>\r\n","<template>\r\n    <div>\r\n\r\n        <div class=\"container\">\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol class=\"breadcrumb onmalika-breadcrumb\">\r\n                    <li class=\"breadcrumb-item\">\r\n                        <NuxtLink to=\"/\">Главная</NuxtLink>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item\">\r\n                        <NuxtLink to=\"/shop\">Магазинчик</NuxtLink>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item\">\r\n                        <NuxtLink :to=\"'/shop/' + previous_category.slug\">{{ previous_category.name }}</NuxtLink>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">{{ solo_category.name }}</li>\r\n                </ol>\r\n            </nav>\r\n        </div> <!-- container //  -->\r\n\r\n        <section class=\"padding-y\">\r\n            <div class=\"container\">\r\n                <div class=\"row mb-4\">\r\n                    <div class=\"col-3\">\r\n                        <div class=\"accordion onmalika-accardion mb-5\" id=\"accordionCategories\">\r\n                            <div class=\"accordion-item\" v-for=\"(cats, index) in hierarchicalCategories\" :key=\"cats.id\">\r\n                                <h2 class=\"accordion-header\" :id=\"'headingOne-' + cats.slug\">\r\n                                    <button class=\"accordion-button\" :class=\"{ 'collapsed': !isSubcategorySelected(cats) }\"\r\n                                        type=\"button\" data-bs-toggle=\"collapse\"\r\n                                        :data-bs-target=\"'#collapseOne-' + cats.slug\" aria-expanded=\"true\"\r\n                                        :aria-controls=\"'collapseOne-' + cats.slug\">\r\n                                        {{ cats.name }}\r\n                                    </button>\r\n                                </h2>\r\n                                <div :id=\"'collapseOne-' + cats.slug\" class=\"accordion-collapse collapse\"\r\n                                    :class=\"{ 'show': isSubcategorySelected(cats) }\"\r\n                                    :aria-labelledby=\"'headingOne' + cats.slug\" data-bs-parent=\"#accordionCategories\">\r\n                                    <div class=\"accordion-body\">\r\n                                        <div class=\"form-check\" v-for=\"subcat in cats.subcategories\">\r\n                                            <input @click=\"handleRadioClick(subcat.slug)\" class=\"form-check-input\"\r\n                                                :checked=\"route.params.subCategory === subcat.slug\" type=\"radio\"\r\n                                                name=\"categoryRadio\" :id=\"'category' + subcat.id\" :value=\"subcat.slug\">\r\n                                            <label class=\"form-check-label\" :for=\"'category' + subcat.id\">\r\n                                                {{ subcat.name }}\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"multi-range mb-5\">\r\n                            <div class=\"multi-range-inputs\">\r\n                                <input @keydown=\"validateInput\" type=\"number\" v-model=\"barMinValue\" @input=\"updateMinValue\"\r\n                                    class=\"form-control gray-conrol w-100\">\r\n                                <input @keydown=\"validateInput\" type=\"number\" v-model=\"barMaxValue\" @input=\"updateMaxValue\"\r\n                                    class=\"form-control gray-conrol w-100\">\r\n                            </div>\r\n                            <MultiRangeSlider :min=\"0\" :step=\"100\" :max=\"1000\" :ruler=\"false\" :label=\"false\"\r\n                                :minValue=\"barMinValue\" :maxValue=\"barMaxValue\" @input=\"UpdateValues\" />\r\n                        </div>\r\n                        <div class=\"accordion onmalika-accardion mb-5\" id=\"accordionFilters\">\r\n                            <div class=\"accordion-item\" v-for=\"(atrs, index) in attrList\" :key=\"index\">\r\n                                <h2 class=\"accordion-header\">\r\n                                    <button type=\"button\" class=\"accordion-button\" data-bs-toggle=\"collapse\"\r\n                                        :data-bs-target=\"'#collapseOne' + index\">\r\n                                        <i class=\"icon-control fa fa-chevron-down\"></i>\r\n                                        {{ atrs.attribute.name }}\r\n                                    </button>\r\n                                </h2>\r\n                                <div class=\"accordion-collapse show\" :id=\"'collapseOne' + index\">\r\n                                    <div class=\"accordion-body\">\r\n                                        <label class=\"form-check mb-2\" v-for=\"atr_val in atrs.attribute_values\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\"\r\n                                                @click=\"handleCheckboxClick($event, atr_val.id)\"\r\n                                                :checked=\"isSelected(atr_val.id)\"\r\n                                                @change=\"handleCheckboxChange($event, atr_val.id)\" :value=\"atr_val.id\">\r\n                                            <span class=\"form-check-label\"> {{ atr_val.value }} </span>\r\n\r\n                                        </label>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-9\">\r\n                        <div class=\"row justify-content-between mb-3\">\r\n                            <div class=\"col-3\">\r\n                                <div class=\"dropdown onmalika-dropdown\">\r\n                                    <button class=\"btn onmalika-dropdown-toggle dropdown-toggle\" type=\"button\"\r\n                                        data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        {{ selectedFilterText }}\r\n                                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path\r\n                                                d=\"M13.2807 5.9668L8.93404 10.3135C8.4207 10.8268 7.5807 10.8268 7.06737 10.3135L2.7207 5.9668\"\r\n                                                stroke=\"black\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"\r\n                                                stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                        </svg>\r\n\r\n                                    </button>\r\n                                    <ul class=\"dropdown-menu onmalika-dropdown-menu\">\r\n                                        <li>\r\n                                            <div class=\"form-check dropdown-item\">\r\n                                                <input @click=\"updateFilter('price', 'По возрастанию цены')\"\r\n                                                    class=\"form-check-input\" type=\"radio\" name=\"sortRadio\" id=\"price-up\">\r\n                                                <label class=\"form-check-label\" for=\"price-up\">\r\n                                                    По возрастанию\r\n                                                    цены\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                        </li>\r\n                                        <li>\r\n                                            <div class=\"form-check dropdown-item\">\r\n                                                <input @click=\"updateFilter('-price', 'По убыванию цены')\"\r\n                                                    class=\"form-check-input\" type=\"radio\" name=\"sortRadio\" id=\"price-down\">\r\n                                                <label class=\"form-check-label\" for=\"price-down\">\r\n                                                    По\r\n                                                    убыванию цены\r\n                                                </label>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div class=\"form-check dropdown-item\">\r\n                                                <input @click=\"updateFilter('name', 'В алфавитном порядке')\"\r\n                                                    class=\"form-check-input\" type=\"radio\" name=\"sortRadio\" id=\"ASC\">\r\n                                                <label class=\"form-check-label\" for=\"ASC\">\r\n                                                    В\r\n                                                    алфавитном порядке\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                        </li>\r\n                                        <li>\r\n                                            <div class=\"form-check dropdown-item\">\r\n                                                <input @click=\"updateFilter('-name', 'С конца алфавитного порядка')\"\r\n                                                    class=\"form-check-input\" type=\"radio\" name=\"sortRadio\" id=\"DESC\">\r\n                                                <label class=\"form-check-label\" for=\"DESC\">\r\n                                                    С конца\r\n                                                    алфавитного порядка\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"col-auto\">\r\n                                <div class=\"dropdown onmalika-dropdown\">\r\n                                    <button class=\"btn onmalika-dropdown-toggle dropdown-toggle\" type=\"button\"\r\n                                        data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        Сколько товаров показывать\r\n                                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path\r\n                                                d=\"M13.2807 5.9668L8.93404 10.3135C8.4207 10.8268 7.5807 10.8268 7.06737 10.3135L2.7207 5.9668\"\r\n                                                stroke=\"black\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"\r\n                                                stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                        </svg>\r\n\r\n                                    </button>\r\n                                    <ul class=\"dropdown-menu onmalika-dropdown-menu\">\r\n                                        <li>\r\n                                            <div class=\"form-check dropdown-item\">\r\n                                                <input @click=\"updatePageSize('9')\" class=\"form-check-input\" type=\"radio\"\r\n                                                    name=\"categoryRadio\" id=\"price-up\">\r\n                                                <label class=\"form-check-label\" for=\"price-up\">\r\n                                                    9\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                        </li>\r\n                                        <li>\r\n                                            <div class=\"form-check dropdown-item\">\r\n                                                <input @click=\"updatePageSize('12')\" class=\"form-check-input\" type=\"radio\"\r\n                                                    name=\"categoryRadio\" id=\"price-down\">\r\n                                                <label class=\"form-check-label\" for=\"price-down\">\r\n                                                    12\r\n                                                </label>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div class=\"form-check dropdown-item\">\r\n                                                <input @click=\"updatePageSize('15')\" class=\"form-check-input\" type=\"radio\"\r\n                                                    name=\"categoryRadio\" id=\"ASC\">\r\n                                                <label class=\"form-check-label\" for=\"ASC\">\r\n                                                    15\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row row-cols-3\">\r\n                            <div class=\"col mb-4\" v-for=\"product in products\" :key=\"product.id\">\r\n                                <LazyCard :product_info=\"product\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <nav aria-label=\"Page navigation example\" v-if=\"totalPages > 1\">\r\n                    <ul class=\"pagination onmalika-pagination justify-content-center\">\r\n                        <li class=\"page-item\">\r\n                            <button type=\"button\" class=\"dark-cover\" :class=\"{ 'disabled': currentPage === 1 }\"\r\n                                @click=\"loadPrevPage\" :disabled=\"currentPage === 1\">\r\n                                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M7.9763 4.94165L2.91797 9.99998L7.9763 15.0583\" stroke=\"white\"\r\n                                        stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\" />\r\n                                    <path d=\"M17.0836 10H3.05859\" stroke=\"white\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"\r\n                                        stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg>\r\n\r\n                            </button>\r\n\r\n                        </li>\r\n                        <li class=\"page-item\" v-for=\"page in paginationRange\" :key=\"page\">\r\n                            <div v-if=\"page === '...'\">\r\n                                <span class=\"onmalika-pagination-more\">...</span>\r\n                            </div>\r\n                            <button type=\"button\" v-else class=\"onmalika-pagination-links\" @click=\"goToPage(page)\"\r\n                                :class=\"{ active: page === currentPage }\">\r\n                                {{ page }}\r\n                            </button>\r\n                        </li>\r\n                        <li class=\"page-item\">\r\n                            <button type=\"button\" class=\"dark-cover\" :class=\"{ 'disabled': currentPage === totalPages }\"\r\n                                @click=\"loadNextPage\" :disabled=\"currentPage === totalPages\">\r\n                                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12.0234 4.94165L17.0818 9.99998L12.0234 15.0583\" stroke=\"white\"\r\n                                        stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\" />\r\n                                    <path d=\"M2.91797 10H16.943\" stroke=\"white\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"\r\n                                        stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg>\r\n\r\n                            </button>\r\n\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\nconst attrList = ref()\r\nconst { data: category } = await useJsonPlaceholderData('/categories/')\r\nconst { data: solo_category } = await useJsonPlaceholderData('/categories/' + route.params.subCategory)\r\nconst { data: attr_list } = await useJsonPlaceholderData(`/products/?category=${solo_category.value.id}`)\r\nattrList.value = attr_list.value.attr_filters\r\nif (!solo_category.value) {\r\n    throw createError({ statusCode: 404, message: 'Такой категории нету' })\r\n}\r\nconst { data: previous_category } = await useJsonPlaceholderData('/categories/' + route.params.category)\r\nconst getCategories = computed(() => category.value)\r\nconst hierarchicalCategories = ref([]);\r\nconst createHierarchicalStructure = (data) => {\r\n    const categoriesById = {};\r\n\r\n    data.results.forEach(category => {\r\n        category.subcategories = [];\r\n        categoriesById[category.id] = category;\r\n    });\r\n\r\n    data.results.forEach(category => {\r\n        if (category.parent && categoriesById[category.parent.id]) {\r\n            categoriesById[category.parent.id].subcategories.push(category);\r\n        }\r\n    });\r\n\r\n    return data.results.filter(category => !category.parent);\r\n};\r\nconst isSubcategorySelected = (cats) => {\r\n    return cats.subcategories.some(subcat => route.params.subCategory === subcat.slug);\r\n};\r\nconst products = ref([]);\r\nconst nextUrl = ref(null);\r\nconst prevUrl = ref(null);\r\nconst currentPage = ref(1);\r\nconst totalCount = ref(0);\r\nconst selectedAttributes = ref([])\r\nconst pageSize = ref(9)\r\nconst updatePageSize = (size) => {\r\n    pageSize.value = Number(size);\r\n    router.push({ path: route.path, query: { ...route.query, pageSize: size } });\r\n    fetchProducts('/products/?category=' + solo_category.value.id + '&limit=' + pageSize.value);\r\n};\r\n\r\npageSize.value = Number(route.query.pageSize) || 9;\r\n\r\nwatch(() => route.query.pageSize, (newSize) => {\r\n    if (newSize !== undefined && newSize !== pageSize.value) {\r\n        pageSize.value = Number(newSize);\r\n        fetchProducts('/products/?category=' + solo_category.value.id + '&limit=' + pageSize.value);\r\n    }\r\n});\r\nconst totalPages = computed(() => Math.ceil(totalCount.value / pageSize.value));\r\n\r\nconst handleRadioClick = async (value) => {\r\n    const { data: nextCat } = await useJsonPlaceholderData('/categories/' + value)\r\n    const newUrl = '/shop/' + nextCat.value.parent.slug + '/' + value;\r\n    router.push(newUrl);\r\n};\r\nconst selectFilterOfProducts = ref('');\r\nconst selectedFilterText = ref('Выберите сортировку');\r\nconst sortFilter = ref('');\r\n\r\nimport MultiRangeSlider from \"multi-range-slider-vue\";\r\nconst barMinValue = ref(0)\r\nconst barMaxValue = ref(1000)\r\nconst priceFilterTimeout = ref(null);\r\nconst validateInput = (event) => {\r\n    // Разрешить только цифры\r\n    if (!/[0-9]/.test(event.key) && event.key !== \"Backspace\" && event.key !== \"Tab\") {\r\n        event.preventDefault();\r\n    }\r\n}\r\nconst validateAndSetNumber = (value, targetRef) => {\r\n    const number = Number(value);\r\n    if (!isNaN(number) && number >= 0) {\r\n        targetRef.value = number;\r\n    } else {\r\n        console.error(\"Invalid input. Please enter a valid number.\");\r\n    }\r\n    debounceFetchProducts();\r\n};\r\n\r\nconst updateMinValue = (e) => {\r\n    validateAndSetNumber(e.target.value, barMinValue);\r\n};\r\n\r\nconst updateMaxValue = (e) => {\r\n    validateAndSetNumber(e.target.value, barMaxValue);\r\n};\r\nconst UpdateValues = (e) => {\r\n    barMinValue.value = e.minValue;\r\n    barMaxValue.value = e.maxValue;\r\n    if (priceFilterTimeout.value) {\r\n        clearTimeout(priceFilterTimeout.value);\r\n    }\r\n    debounceFetchProducts();\r\n}\r\nconst debounceFetchProducts = () => {\r\n    if (priceFilterTimeout.value) clearTimeout(priceFilterTimeout.value);\r\n    priceFilterTimeout.value = setTimeout(() => {\r\n        let url = `/products/?category=${solo_category.value.id}&limit=${pageSize.value}&price_from=${barMinValue.value}&price_to=${barMaxValue.value}`\r\n        if (route.query.attr) {\r\n            url += `&attr=${route.query.attr}`;\r\n        }\r\n        fetchProducts(url);\r\n    }, 1000);\r\n};\r\n\r\nwatch([barMinValue, barMaxValue], () => {\r\n    // Проверка, что timeout был уже установлен и ожидание истекло\r\n    if (priceFilterTimeout.value) {\r\n        clearTimeout(priceFilterTimeout.value);\r\n    }\r\n    priceFilterTimeout.value = setTimeout(() => {\r\n        if (route.query.attr) {\r\n            fetchProducts(`/products/?category=${solo_category.value.id}&limit=${pageSize.value}&attr=${route.query.attr}&price_from=${barMinValue.value}&price_to=${barMaxValue.value}`)\r\n        } else {\r\n            fetchProducts(`/products/?category=${solo_category.value.id}&limit=${pageSize.value}&price_from=${barMinValue.value}&price_to=${barMaxValue.value}`);\r\n        }\r\n\r\n    }, 1000);\r\n});\r\n\r\nconst fetchProducts = async (url) => {\r\n    try {\r\n        const res = await useJsonPlaceholderData(url + '&ordering=' + sortFilter.value, {\r\n            cache: false\r\n        });\r\n        const data = res.data\r\n\r\n        products.value = data.value.results;\r\n\r\n        nextUrl.value = data.value.next;\r\n        prevUrl.value = data.value.previous;\r\n        totalCount.value = data.value.count;\r\n\r\n    } catch (error) {\r\n        console.error('Ошибка при получении данных: ', error);\r\n    }\r\n};\r\nfetchProducts('/products/?category=' + solo_category.value.id + '&limit=' + pageSize.value);\r\nif (route.query.page) {\r\n    console.log(route.query.page)\r\n\r\n}\r\nconst goToPage = async (page) => {\r\n    window.scrollTo(0, 0)\r\n    currentPage.value = page;\r\n    const offset = (page - 1) * pageSize.value;\r\n    let url = `/products/?category=${solo_category.value.id}&limit=${pageSize.value}&offset=${offset}`;\r\n    if (route.query.attr) {\r\n        url += `&attr=${route.query.attr}`;\r\n    }\r\n    await fetchProducts(url);\r\n    await router.push({ path: route.path, query: { ...route.query, page: page } });\r\n\r\n\r\n};\r\nconst loadNextPage = async () => {\r\n    window.scrollTo(0, 0);\r\n    const nextPage = currentPage.value + 1;\r\n    if (nextPage <= totalPages.value) {\r\n        currentPage.value = nextPage;\r\n        let url = `/products/?category=${solo_category.value.id}&limit=${pageSize.value}&offset=${(nextPage - 1) * pageSize.value}`\r\n        if (route.query.attr) {\r\n            url += `&attr=${route.query.attr}`;\r\n        }\r\n        fetchProducts(url);\r\n\r\n    }\r\n    await router.push({ path: route.path, query: { ...route.query, page: nextPage } });\r\n};\r\nconst loadPrevPage = async () => {\r\n    window.scrollTo(0, 0);\r\n    const prevPage = currentPage.value - 1;\r\n    if (prevPage >= 1) {\r\n        currentPage.value = prevPage;\r\n        let url = `/products/?category=${solo_category.value.id}&limit=${pageSize.value}&offset=${(prevPage - 1) * pageSize.value}`\r\n        if (route.query.attr) {\r\n            url += `&attr=${route.query.attr}`;\r\n        }\r\n        fetchProducts(url);\r\n        await router.push({ path: route.path, query: { ...route.query, page: prevPage } });\r\n\r\n    };\r\n}\r\nconst updateProductsByPage = (page) => {\r\n    const offset = (page - 1) * pageSize.value;\r\n    let url = `/products/?category=${solo_category.value.id}&limit=${pageSize.value}&offset=${offset}`\r\n    if (route.query.attr) {\r\n        url += `&attr=${route.query.attr}`;\r\n    }\r\n    fetchProducts(url);\r\n\r\n};\r\nconst handleCheckboxClick = (event, id) => {\r\n    if (!event.target.checked) {\r\n\r\n        setFilter(id, !event.target.checked);\r\n    }\r\n};\r\nconst handleCheckboxChange = (event, id) => {\r\n    const parsedId = parseInt(id, 10);\r\n    const index = selectedAttributes.value.findIndex(value => value === parsedId);\r\n\r\n    if (event.target.checked) {\r\n        if (index === -1) {\r\n            selectedAttributes.value.push(parsedId);\r\n        }\r\n    } else {\r\n        if (index != -1) {\r\n            selectedAttributes.value.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    updateProductsByAttributes();\r\n\r\n    const { path, query } = router.currentRoute.value;\r\n    const newQuery = {};\r\n\r\n    if (selectedAttributes.value.length > 0) {\r\n        newQuery.attr = selectedAttributes.value.map(String).join(',');\r\n    }\r\n\r\n\r\n\r\n\r\n    router.push({\r\n        path: path,\r\n        query: newQuery\r\n    });\r\n};\r\nwatch(selectedAttributes, () => {\r\n    const { path, query } = router.currentRoute.value;\r\n    const newQuery = { ...query };\r\n    if (selectedAttributes.value.length === 0) {\r\n        delete newQuery.attr;\r\n    } else {\r\n        newQuery.attr = selectedAttributes.value.join(',');\r\n    }\r\n\r\n    router.replace({\r\n        path: path,\r\n        query: newQuery\r\n    });\r\n});\r\nconst updateFilter = (value, text) => {\r\n    selectFilterOfProducts.value = value;\r\n    selectedFilterText.value = text;\r\n};\r\nwatch(selectFilterOfProducts, () => {\r\n    sortFilter.value = selectFilterOfProducts.value;\r\n    updateProductsByPage(currentPage.value);\r\n});\r\n\r\nconst setFilter = (id, event) => {\r\n    if (event == undefined || event == false) {\r\n        const parsedId = parseInt(id, 10);\r\n        const index = selectedAttributes.value.findIndex(value => value === parsedId);\r\n        if (index !== -1) {\r\n            selectedAttributes.value.splice(index, 1);\r\n        } else {\r\n            selectedAttributes.value.push(parsedId);\r\n        }\r\n        const { path, query } = router.currentRoute.value;\r\n        const newQuery = { ...query };\r\n        if (selectedAttributes.value.length === 0) {\r\n            delete newQuery.attr;\r\n        } else {\r\n            newQuery.attr = selectedAttributes.value.join(',');\r\n        }\r\n\r\n        router.push({\r\n            path: path,\r\n            query: newQuery\r\n        });\r\n\r\n        updateProductsByAttributes();\r\n    }\r\n};\r\n\r\nconst isSelected = (id) => {\r\n    const queryParams = route.query.attr ? route.query.attr.split(',').map(value => parseInt(value, 10)) : [];\r\n    const isSelected = queryParams.includes(id);\r\n    return isSelected;\r\n};\r\nconst updateProductsByAttributes = () => {\r\n    const attributesQueryParam = selectedAttributes.value.join(',');\r\n\r\n    const apiUrl = `/products/?category=${solo_category.value.id}&limit=${pageSize.value}&attr=${attributesQueryParam}`;\r\n    fetchProducts(apiUrl);\r\n\r\n};\r\nonBeforeUpdate(() => {\r\n    nextUrl.value = null;\r\n    prevUrl.value = null;\r\n});\r\nonMounted(async () => {\r\n    const categoriesData = await getCategories.value;\r\n    hierarchicalCategories.value = createHierarchicalStructure(categoriesData);\r\n    if (route.query.page) {\r\n        const page = parseInt(route.query.page);\r\n        currentPage.value = isNaN(page) ? 1 : page;\r\n    }\r\n    const attrQueryParam = route.query.attr;\r\n    if (attrQueryParam) {\r\n        const attrPairs = attrQueryParam.split(',');\r\n        for (const pair of attrPairs) {\r\n            const [id] = pair.split(':');\r\n            const attribute = attrList.value.find(attr => {\r\n                return attr.attribute_values.some(value => value.id === parseInt(id));\r\n            });\r\n\r\n            if (attribute) {\r\n\r\n                setFilter(id);\r\n\r\n                // Добавим небольшую задержку (например, 100 мс) между вызовами setFilter\r\n                await new Promise(resolve => setTimeout(resolve, 1));\r\n            } else {\r\n                console.error(`Attribute with ID ${id} not found.`);\r\n            }\r\n        }\r\n    }\r\n    const pageFromUrl = parseInt(route.query.page, 10);\r\n    if (!isNaN(pageFromUrl) && pageFromUrl > 0) {\r\n        currentPage.value = pageFromUrl;\r\n        updateProductsByPage(pageFromUrl);\r\n    } else {\r\n\r\n        fetchProducts('/products/?category=' + solo_category.value.id + '&limit=' + pageSize.value);\r\n    }\r\n});\r\n\r\n\r\n\r\nconst paginationRange = computed(() => paginate(totalPages.value, currentPage.value, 2));\r\n\r\nfunction paginate(totalPages, currentPage, width) {\r\n    let start = currentPage - width;\r\n    let end = currentPage + width;\r\n    const range = [];\r\n\r\n    if (start > 1) {\r\n        range.push(1);\r\n    }\r\n\r\n    if (start > 2) {\r\n        range.push('...');\r\n    }\r\n\r\n    start = Math.max(start, 1);\r\n    end = Math.min(end, totalPages);\r\n\r\n    for (let i = start; i <= end; i++) {\r\n        range.push(i);\r\n    }\r\n\r\n    if (end < totalPages - 1) {\r\n        range.push('...');\r\n    }\r\n\r\n    if (end < totalPages) {\r\n        range.push(totalPages);\r\n    }\r\n\r\n    return range;\r\n}\r\n\r\nuseSeoMeta({\r\n    title: solo_category.value.name,\r\n    ogTitle: solo_category.value.name,\r\n})\r\n\r\n</script>\r\n\r\n\r\n\r\n","<template>\r\n    <NuxtLink :to=\"($route.path + '/' + category_info.slug)\" class=\"card h-100 onmalika-category-card text-center\">\r\n        <img  :src=\"baseurl + category_info.image.url\" v-if=\"category_info.image\" class=\"w-100\" alt=\"...\" />\r\n        <p>{{ category_info.name }}</p>\r\n    </NuxtLink>\r\n</template>\r\n\r\n\r\n\r\n<script setup>\r\n\r\nconst props = defineProps({\r\n    category_info: {\r\n        type: Object,\r\n        required: true,\r\n    },\r\n});\r\nconst { category_info } = props;\r\nconst baseurl = 'https://admin.itpapa.uz'\r\n\r\n</script>","<template>\r\n    <div>\r\n\r\n        <div class=\"container\">\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol class=\"breadcrumb onmalika-breadcrumb\">\r\n                    <li class=\"breadcrumb-item\">\r\n                        <NuxtLink to=\"/\">Главная</NuxtLink>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item\">\r\n                        <NuxtLink to=\"/shop\">Магазинчик</NuxtLink>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item active\" aria-current=\"page\">{{ solo_category.name }}</li>\r\n                </ol>\r\n            </nav>\r\n        </div>\r\n\r\n        <section class=\"padding-y\">\r\n            <div class=\"container\">\r\n                <div class=\"row row-cols-5\">\r\n                    <div class=\"col\" v-for=\"cat in category.results\" :key=\"cat.id\">\r\n                        <CategoryCard :category_info=\"cat\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nconst route = useRoute()\r\nconst page_slug = route.params.category\r\nconst backUrl = useRouter().options.history.state.back\r\n\r\nconst { data: category } = await useJsonPlaceholderData('/categories/?parent_slug=' + page_slug)\r\nif (!category.value || !category.value) {\r\n    throw createError({ statusCode: 404, message: 'Такой категории нету' })\r\n}\r\nconst { data: solo_category } = await useJsonPlaceholderData('/categories/' + page_slug)\r\n\r\nconst getCategories = computed(() => category.value)\r\nconst getSoloCat = computed(() => solo_category.value)\r\n\r\n\r\n\r\n\r\nuseSeoMeta({\r\n    title: solo_category.value.name,\r\n    ogTitle: solo_category.value.name,\r\n\r\n})\r\n</script>\r\n","<template>\r\n    <div>\r\n      \r\n            <div class=\"container\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol class=\"breadcrumb onmalika-breadcrumb\">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <NuxtLink to=\"/\">Главная</NuxtLink>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\" aria-current=\"page\">Магазинчик</li>\r\n                    </ol>\r\n                </nav>\r\n            </div> \r\n     \r\n        <section class=\"padding-y\">\r\n\r\n            <div class=\"container\">\r\n                <div class=\"row row-cols-5\">\r\n                    <div class=\"col\" v-for=\"cat in category.results\" :key=\"cat.id\">\r\n\r\n                        <CategoryCard :category_info=\"cat\" />\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nconst { data: category } = await useJsonPlaceholderData('/categories/?parent_null=true')\r\n\r\nuseSeoMeta({\r\n    title: 'Магазинчик',\r\n    ogTitle: 'Магазинчик',\r\n\r\n})\r\nuseHead({\r\n    title: \"Магазинчик\",\r\n    meta: [\r\n        { name: 'Магазинчик 1', content: '' }\r\n    ],\r\n})\r\n</script>\r\n\r\n"],"names":["_withAsyncContext","_sfc_main","_ssrRenderAttr","_ssrInterpolate","_ssrRenderList","isSelected","totalPages","currentPage"],"mappings":"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","x_google_ignoreList":[1]}